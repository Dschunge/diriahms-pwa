import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export const metadata: Metadata = {
  title: "My PWA",
  description: "A Progressive Web App with a bottom tab bar",
  manifest: "/manifest.json",
  //themeColor: '#3b82f6',
  //viewport: 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover',
  appleWebApp: {
    capable: true,
    statusBarStyle: "black-translucent",
    title: "My PWA",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              if ("serviceWorker" in navigator) {
                navigator.serviceWorker
                  .register("./service-worker.js")
                  .then(function(registration) {
                    console.log("Registration successful, scope is:", registration.scope);
                    
                    })
                    .catch(function(err) {
                      console.log("Service worker registration failed, error:"  , err );
                  }); 
                }
            `,
          }}
        />
      </body>
    </html>
  );
}
